package listem;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class LineCounter implements ILineCounter {

	public LineCounter(){}
	@Override
	public Map<File, Integer> countLines(File directory,
			String fileSelectionPattern, boolean recursive) {
		
		Parent p = new Parent();
		Map<File, Integer> maplc = new HashMap<File, Integer>();
		File[] files = p.Process(directory, fileSelectionPattern);
		
		for(int i=0; i<files.length; i++)
		{
			int count = 0;
			try
			  {
				//String[] names = new String[files.size()];
				//files.toArray(names);
			    BufferedReader reader = new BufferedReader(new FileReader(files[i]));
			    String line;
			    while ((line = reader.readLine()) != null)
			    {
			    	count++;
			    }
			  }
			  catch (Exception e)
			  {
			    System.err.format("Exception occurred trying to read '%s'.", files[i]);
			    e.printStackTrace();
			    return null;
			  }
			if(!maplc.containsKey(files[i]));
			{
				maplc.put(files[i], count);
			}
		}
		return maplc;
	}

}
