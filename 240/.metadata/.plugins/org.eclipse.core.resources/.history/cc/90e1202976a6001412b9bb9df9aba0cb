package listem;

import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Parent {
	
	public Parent()
	{}
	
	public File[] Process(File directory, String FileSelectionPattern, boolean recursive)
	{
		
		
		List<File> correct = new ArrayList<File>();
	
		
		if(directory.isDirectory())
		{
			System.out.println("good");
		}
		else
		{
			System.out.println("bad");
		}
			
		
		File[] lister = directory.listFiles();
		Pattern p = Pattern.compile(FileSelectionPattern);
		for(int i=0; i<lister.length; i++)
		{
			if(recursive)
			{
				if(lister[i].isDirectory())
				{
					File[] Rec = Process(lister[i], FileSelectionPattern, recursive);
					for(int k=0; k<Rec.length; k++)
					{
						correct.add(Rec[k]);
					}
				}
			}
			Matcher m = p.matcher(lister[i].getName());
			boolean b = m.matches();
			if(b)
			{
				correct.add(lister[i]);
			}
			
		}	
		File[] names = new File[correct.size()];
		correct.toArray(names);
		return names;
	}
}
