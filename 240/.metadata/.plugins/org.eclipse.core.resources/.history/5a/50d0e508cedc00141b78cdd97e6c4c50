package client;

import java.awt.BorderLayout;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

import shared.communication.DownloadBatchOutput;

public class FormTab extends JPanel{
	
	BatchState bs;
	JList list;
	FormRight fr;
	
	public FormTab(BatchState batch)
	{
		bs = batch;
		//setLayout(new GridBagLayout());
		setLayout(new BorderLayout());
	}
	
	public void initialize()
	{
		int amount = bs.recordsperimage;
		String[] recs = new String[amount];
		for(int i=0; i<amount; i++)
		{
			StringBuilder sb = new StringBuilder();
			sb.append(Integer.toString(i + 1) + "                    ");
			recs[i] = sb.toString();
		}
		
		list = new JList(recs);	
		list.addListSelectionListener(new Listen());
		add(list, BorderLayout.WEST);
		
		fr = new FormRight();
		
		Cell c = bs.getCell();
		
		//fr.update(c.record);
		
		add(fr, BorderLayout.EAST);
		
	}
	
	public void update(int r)
	{
		remove(fr);
		FormRight temp = new FormRight(r);
		add(temp, BorderLayout.EAST);
		revalidate();
	}
	
	public class FormRight extends JPanel
	{
		GridBagLayout gb = new GridBagLayout();
		JTextField[][] texts;
		
		public FormRight()
		{
			setLayout(gb);
			int rpi = bs.recordsperimage;
			System.out.println("rpi="+rpi + "fields:" + bs.fields.size());
			texts = new JTextField[rpi][bs.fields.size()+1];
			
			int f = 1;
			for(int i=0; i<(bs.fields.size()); i++)
			{
				
				JLabel name = new JLabel(bs.fields.get(i).getTitle());
				
				for(int k=0; k<rpi; k++)
				{
					
					String s = bs.values[k][f];
					JTextField text;
					if(s == null)
					{
						text = new JTextField(20);
					}
					else
					{
						text = new JTextField(s, 20);
					}
					
					text.addActionListener(new TextListen(k, f));
					texts[k][f] = text;
					
				
				}
				
				GridBagConstraints cc = new GridBagConstraints();
				cc.anchor = GridBagConstraints.LINE_START;
				cc.gridx = 1;
				cc.gridy = i;
				cc.weighty = .25;
				add(name, cc);
				
				/*cc.gridx = 2;
				cc.gridy = i;
				cc.weighty = .25;
				add(text, cc);*/
				
				f++;
			}
			
			Cell c = bs.getCell();
			int r = c.record;
			for(int i=0; i<bs.fields.size(); i++)
			{
				System.out.println("r="+r + "f:" + i);
				GridBagConstraints cc = new GridBagConstraints();
				cc.anchor = GridBagConstraints.LINE_START;
				cc.gridx = 2;
				cc.gridy = i;
				cc.weighty = .25;
				add(texts[r][i+1], cc);
			}
			
		}
		
		public FormRight(int r)
		{
			setLayout(gb);
			
			for(int i=0; i<(bs.fields.size()); i++)
			{
				
				JLabel name = new JLabel(bs.fields.get(i).getTitle());
				GridBagConstraints cc = new GridBagConstraints();
				cc.anchor = GridBagConstraints.LINE_START;
				cc.gridx = 1;
				cc.gridy = i;
				cc.weighty = .25;
				add(name, cc);
			}
			
			int f =1;
			for(int i=0; i<bs.fields.size(); i++)
			{
				String s = bs.values[r][f];
				JTextField text = new JTextField(s, 20);
				
				text.addActionListener(new TextListen(r, f));
				
				GridBagConstraints cc = new GridBagConstraints();
				cc.anchor = GridBagConstraints.LINE_START;
				cc.gridx = 2;
				cc.gridy = i;
				cc.weighty = .25;
				add(text, cc);
				f++;
			}
		}
		
		/*
		public void update(int r)
		{
			//System.out.println("formtab, row#: " + r);
			for(int i=0; i<(bs.fields.size()); i++)
			{
				
				JLabel name = new JLabel(bs.fields.get(i).getTitle());
				GridBagConstraints cc = new GridBagConstraints();
				cc.anchor = GridBagConstraints.LINE_START;
				cc.gridx = 1;
				cc.gridy = i;
				cc.weighty = .25;
				add(name, cc);
			}
			
			int f =1;
			for(int i=0; i<bs.fields.size(); i++)
			{
				String s = bs.values[r][f];
				JTextField text = new JTextField(s, 20);
				
				GridBagConstraints cc = new GridBagConstraints();
				cc.anchor = GridBagConstraints.LINE_START;
				cc.gridx = 2;
				cc.gridy = i;
				cc.weighty = .25;
				add(text, cc);
				f++;
			}
			
			
			revalidate();
		}*/
	}
	
	public class Listen implements ListSelectionListener
	{

		@Override
		public void valueChanged(ListSelectionEvent e) {
			// TODO Auto-generated method stub
			
			System.out.println(e.getFirstIndex());
			update(e.getFirstIndex());
		}
		
	}
	
	public class TextListen implements ActionListener
	{
		int row;
		int column;
		
		TextListen(int r, int c)
		{
			row = r;
			column = c;
		}
		
		@Override
		public void actionPerformed(ActionEvent e) {
			// TODO Auto-generated method stub
			System.out.println("action. row=" + row + " col=" + column);
		}
		
	}
	
	
	
	
	
	

	/*GridBagConstraints c = new GridBagConstraints();
	c.anchor = GridBagConstraints.LINE_START;
	c.fill = GridBagConstraints.WEST;
	c.gridx = 0;
	c.gridy = 0;
	c.weighty = 1;
	//c.weightx = .25;
	c.gridheight = bs.fields.size();
	add(list, c);
	
	//int line = 0;
	for(int i=0; i<bs.fields.size(); i++)
	{
		JLabel name = new JLabel(bs.fields.get(i).getTitle());
		JTextField text = new JTextField(20);
		
		GridBagConstraints cc = new GridBagConstraints();
		cc.anchor = GridBagConstraints.LINE_START;
		cc.gridx = 1;
		cc.gridy = i;
		cc.weighty = .25;
		add(name, cc);
		
		cc.gridx = 2;
		cc.gridy = i;
		cc.weighty = .25;
		add(text, cc);
		
	}*/

}
